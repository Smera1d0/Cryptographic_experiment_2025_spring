#include<iostream>
#include<random>
#include"aes.h"


using namespace std;

extern const int ROUND = 4;

void IntegralDistinguisher( word8 sum[16] )
{
    word8 K[16] = { 0 };

    // generate the random values for K
    random_device rd; 
    mt19937 gen( rd () );
    uniform_int_distribution<int> distribution(0, 255);

    for ( int i = 0; i < 16; i++ )
        K[i] = distribution( gen );

    // encrypt plaintext and summarize all ciphertext

    // Create a delta-set with the first byte varying from 0 to 255
    word8 P[16] = { 0 };
    for (int i = 1; i < 16; i++) {
        P[i] = distribution(gen);
    }

    // Initialize sum to zero
    for (int i = 0; i < 16; i++) {
        sum[i] = 0;
    }

    // Key expansion for AES
    word8 RK[ROUND+1][16];
    KeyExpansion(K, RK);

    // Loop through all possible values for the first byte
    for (int val = 0; val < 256; val++) {
        P[0] = val; // Set the first byte to vary
        
        // Create a copy of the plaintext for encryption
        word8 temp[16];
        for (int i = 0; i < 16; i++) {
            temp[i] = P[i];
        }
        
        // Encrypt the plaintext
        AES_Encrypt_FULL(temp, K);
        
        // XOR the ciphertext to the sum
        for (int i = 0; i < 16; i++) {
            //cout<<temp[i]<<" ";
            sum[i] ^= temp[i];
        }
    }
}

void ExhaustiveSearch( word8 const P[16], word8 const C[16], const vector< vector<word8> > & keycandidate, int index, word8 testkey[16] )
{
    if ( index == keycandidate.size() ) // over 
    {
        word8 RK[ROUND+1][16];
        InvKeyExpansion( testkey, RK );

        word8 PP[16];
        for ( int i = 0; i < 16; i++ )
            PP[i] = P[i];
            
        AES_Encrypt( PP, RK[0] );

        bool flag = true;

        for ( int i = 0; i < 16; i++ )
        {
            if ( C[i] != PP[i] )
            {
                flag = false;
                break;
            }
        }

        if ( flag )
        {
            cout << "The Recovered Key is " << endl;
            cout << RK[0];
            cout << endl;
        }
        return;
    }

    for ( auto it : keycandidate[index] )
    {
        testkey[index] = it;
        ExhaustiveSearch( P, C, keycandidate, index + 1, testkey );
    }
}

void IntegralKeyRecovery () 
{
    // these are ciphertexts of 4 rounds (without the last MixColumn), generated by a delta-set
    word8 C[256][16] = {
    {0x9b,0x82,0x9e,0x2b,0x11,0xba,0xba,0x75,0x0b,0x94,0x97,0xc4,0x2b,0x2e,0xde,0x02},
    {0x59,0x1d,0xd8,0x3a,0x7a,0xb6,0xe5,0xd6,0x56,0xcc,0xcc,0x8a,0x19,0xe4,0xdc,0x62},
    {0x61,0x2c,0xd5,0x8b,0x7c,0x18,0xc3,0x4c,0x5e,0x69,0xc5,0x97,0x8e,0xcf,0x05,0x0d},
    {0x48,0xa8,0x12,0xa4,0x4b,0xfc,0xf2,0xe9,0xb7,0x60,0xe0,0x30,0xfb,0xac,0x51,0xc5},
    {0xca,0x3a,0x62,0x13,0xbf,0x1a,0x0f,0x6a,0xfd,0x44,0x73,0xe2,0x8f,0x07,0x4e,0x12},
    {0x14,0x1a,0x35,0xfa,0x9d,0xbd,0x9d,0x19,0x9f,0x0f,0xf7,0xa1,0x49,0x8c,0x5e,0xd9},
    {0x60,0x02,0xe7,0x23,0x29,0x68,0xc7,0x3f,0xdc,0x9e,0x52,0x69,0xf6,0xd1,0x02,0xc9},
    {0xae,0x81,0x47,0x2a,0x91,0x9a,0x70,0xa1,0x1e,0x53,0xc5,0x94,0x3a,0xf4,0x00,0x65},
    {0x30,0x38,0x42,0x32,0x92,0x02,0xbf,0x94,0x82,0xe1,0xc5,0xa5,0x31,0x90,0x7c,0x37},
    {0xa9,0x4c,0x0c,0xc4,0xbf,0x82,0x3a,0x89,0xd0,0xfc,0x7c,0x5c,0xbf,0xed,0x04,0x8e},
    {0xfa,0x5d,0x15,0x7b,0x89,0x77,0x28,0x93,0x61,0x7e,0x43,0x9f,0x34,0xee,0xca,0x59},
    {0xd7,0x12,0x85,0xd3,0x02,0xad,0xb3,0xe1,0xb0,0xa4,0xbc,0x3f,0xd2,0xb3,0x1e,0xa8},
    {0x38,0x53,0xfe,0x2e,0x8f,0x84,0x61,0xe9,0x47,0x64,0x53,0xe5,0x03,0x6c,0xfb,0x42},
    {0x4a,0x41,0xae,0x78,0x0f,0xb9,0x10,0x1a,0x66,0x58,0x4c,0xaa,0x08,0xf4,0x13,0x11},
    {0xea,0x60,0x17,0xa9,0xe4,0xbe,0x8b,0x40,0x7e,0x52,0x23,0xaf,0x1e,0xe9,0xc9,0x93},
    {0x57,0x2d,0xc5,0x1d,0x48,0x17,0xd2,0x21,0x9a,0xf0,0xea,0x3d,0xeb,0x29,0xfc,0xdd},
    {0xcc,0xa9,0x07,0x9b,0x04,0x0d,0x20,0x35,0x35,0x40,0x3c,0xc7,0xcb,0xc9,0x7c,0x2b},
    {0x98,0xd5,0xba,0x62,0x35,0xb3,0x0c,0x98,0x95,0x04,0xe8,0x3d,0x46,0x86,0xe2,0x14},
    {0xbe,0xe2,0x01,0x0f,0xba,0x89,0x0d,0x3f,0xfe,0xb6,0x7c,0xde,0xc2,0x71,0xbc,0x94},
    {0x70,0x35,0x09,0x51,0x4a,0x83,0xdd,0x9a,0xa9,0xc2,0xf2,0x77,0x8b,0x00,0x09,0xad},
    {0x65,0x5f,0x2d,0x52,0x58,0x10,0xbd,0xc0,0x50,0x4d,0x18,0x53,0x03,0x2d,0x79,0x57},
    {0x29,0x1a,0xeb,0x0f,0x4e,0x34,0x29,0x4a,0xe9,0xb7,0x66,0x58,0xd8,0x09,0x70,0x47},
    {0xee,0x78,0x1f,0x6a,0xb7,0x32,0x9b,0x06,0x7b,0x15,0x75,0xdc,0x69,0x01,0x3e,0x79},
    {0x37,0xf1,0x64,0x27,0xb5,0x63,0x2a,0xd9,0x3b,0xb5,0x72,0xbe,0x24,0x1c,0x2b,0x14},
    {0xf6,0x85,0xc9,0xe9,0x5d,0xc3,0x11,0x8a,0x66,0xc4,0xfe,0x32,0xc9,0xd6,0xf0,0x29},
    {0x67,0x4e,0xb5,0x41,0x36,0xa5,0xab,0x47,0x85,0x0a,0xb0,0xe1,0x4e,0x03,0x85,0xb0},
    {0x72,0x57,0xc5,0xa6,0x5b,0xe5,0xfe,0x1b,0xa4,0xe9,0x67,0x79,0x40,0xdd,0x33,0xe2},
    {0xf2,0x4f,0x20,0x4e,0xaa,0x06,0x8e,0x4c,0x91,0x61,0x53,0xb0,0x03,0x8d,0x7b,0x1f},
    {0xaf,0xcc,0x86,0xaf,0xd9,0xef,0x68,0xd9,0x8b,0x9b,0xcb,0xca,0x1d,0x95,0x54,0x0b},
    {0xbd,0x46,0x53,0xcb,0x27,0x81,0xb5,0xcc,0x28,0xb5,0x65,0x52,0x5e,0x29,0x1d,0x4f},
    {0xf2,0xed,0x56,0xec,0x8b,0x9c,0x93,0xfa,0x48,0xbb,0x00,0xd9,0x02,0x3e,0x94,0xba},
    {0xc1,0x6e,0x5a,0x19,0x3b,0x7b,0x40,0x0c,0x49,0xdd,0xcf,0x15,0x32,0xda,0x08,0x5b},
    {0xb7,0x0e,0xbc,0xae,0x68,0x30,0x02,0x48,0x60,0x43,0x02,0x9f,0xe5,0xbe,0x28,0xf5},
    {0xdb,0x34,0xb7,0x25,0xb5,0x43,0xd6,0x2c,0xb6,0x6b,0x88,0x1d,0x7a,0x9c,0xf3,0x63},
    {0x4b,0x6e,0x16,0xa4,0x72,0xbf,0x30,0x49,0xfa,0xf1,0x68,0xa2,0xec,0x34,0xbc,0xdd},
    {0x87,0x49,0x86,0x1d,0x61,0x45,0x9b,0x71,0xdd,0xc0,0xef,0xdc,0x2e,0xac,0xe9,0xbc},
    {0xb0,0x5c,0xea,0x4c,0x4d,0x87,0x93,0x02,0x7a,0x76,0x9c,0x61,0x0d,0xf6,0x6d,0x75},
    {0xf5,0x57,0x31,0xb6,0x2d,0x88,0x65,0x11,0x03,0xf3,0xe5,0x06,0x5d,0x29,0xd9,0xbc},
    {0x78,0x62,0x8b,0x47,0x33,0x41,0xb1,0xa1,0xf7,0xd7,0xd6,0x77,0xbc,0x95,0x7f,0x6f},
    {0xd9,0x06,0x91,0x83,0x04,0x88,0xee,0xce,0xf9,0xad,0xab,0xb7,0xa4,0xfd,0xd4,0x58},
    {0xf4,0x35,0xda,0xe8,0xa6,0x86,0x70,0x59,0x74,0x7f,0xb4,0x09,0x1a,0x98,0x10,0x8d},
    {0x43,0x01,0x09,0x48,0xe4,0x7c,0x7c,0xc2,0x2b,0x57,0xf4,0xbe,0xe8,0xa1,0x66,0xa5},
    {0x30,0xde,0xf4,0x5a,0x25,0xd9,0x1f,0x1d,0x0e,0x83,0xbf,0xa2,0xd0,0xa7,0x36,0xbe},
    {0xd1,0x6e,0x12,0xac,0xcd,0xec,0xa7,0x27,0x3e,0x66,0xfc,0x1c,0x21,0x4e,0xa7,0x57},
    {0x07,0x76,0xb5,0x14,0xce,0xff,0x10,0xbf,0x23,0x32,0x49,0x3f,0xa3,0xae,0xfe,0xd1},
    {0x09,0x1c,0x2f,0xbd,0x8e,0x77,0xa3,0x8e,0x52,0xaa,0x82,0xe6,0xef,0x46,0xfc,0xea},
    {0x05,0xbb,0xec,0x36,0x0e,0x0c,0x66,0xd8,0xe4,0x0d,0x6e,0xaf,0xc5,0x14,0x57,0x93},
    {0x47,0xb8,0x51,0x14,0x63,0x93,0x77,0x4e,0x6d,0xfd,0x85,0xa9,0x7d,0x20,0xb9,0xc1},
    {0x80,0x24,0x73,0x4a,0x09,0x5d,0x83,0x93,0xc4,0x43,0x6d,0x74,0x3e,0x1b,0x7e,0xa1},
    {0x75,0x82,0xc6,0x2c,0x8a,0x14,0x2b,0x8c,0x3a,0xa2,0x23,0xdb,0x2b,0xf9,0xbe,0x47},
    {0x97,0x61,0x5e,0x76,0xfb,0x23,0x9b,0x87,0x5d,0x4a,0xb4,0xc7,0x3d,0x3e,0xa5,0x11},
    {0x4b,0x88,0x42,0x14,0xef,0xae,0x72,0x2c,0x7e,0x51,0x93,0xef,0xab,0xc8,0x06,0xee},
    {0x36,0x24,0x67,0x1b,0x8b,0xd2,0xe1,0x7a,0x5c,0xf6,0xb7,0xdb,0x19,0xa8,0x73,0x65},
    {0x7d,0x8b,0x1c,0x51,0x85,0xcc,0x8f,0x7f,0x3d,0x9f,0xd1,0xf8,0x3f,0x62,0xf7,0xb1},
    {0x0e,0x4c,0x4c,0x3e,0x30,0xf1,0x1b,0x81,0x4c,0x5e,0x76,0xcd,0xbf,0xeb,0xfe,0x0b},
    {0x77,0x25,0x6d,0x6b,0xbf,0x15,0xc9,0x88,0xbd,0x95,0x5b,0xae,0x64,0x69,0xda,0x87},
    {0x4b,0x71,0x21,0x5a,0x8f,0x81,0x46,0x6b,0xbf,0xe2,0x5d,0x51,0x8e,0xe9,0xf4,0xba},
    {0x02,0x36,0x04,0x54,0xf0,0x14,0x59,0xd2,0x70,0x0a,0xaf,0xb2,0x24,0x4b,0x20,0x4b},
    {0xc6,0x15,0xe0,0xd5,0x8a,0xde,0x95,0x77,0xd8,0x3a,0x36,0x1e,0x34,0x9a,0x55,0x23},
    {0x6e,0x99,0xf9,0x1f,0xe1,0xab,0xdc,0xa8,0xcb,0x15,0xd4,0x76,0x14,0xae,0xd5,0x51},
    {0x45,0x17,0xc3,0x8a,0x22,0x65,0x6c,0xc2,0x07,0xdd,0x35,0xa9,0xf3,0x3d,0xf1,0x97},
    {0x2f,0x5b,0xb3,0x92,0x2c,0xd6,0x64,0xce,0xa5,0x6a,0xc0,0x27,0x76,0x50,0xea,0xc1},
    {0x7a,0xeb,0xef,0x4e,0x93,0xf4,0x9c,0xa1,0x72,0x5a,0xb2,0x2a,0xc6,0xec,0x6d,0x14},
    {0xc0,0x3c,0x8b,0x40,0xab,0xe4,0x43,0x7c,0x4e,0xa3,0x70,0x40,0xe5,0x33,0x31,0x50},
    {0x9f,0xec,0x69,0x74,0x54,0xc4,0x11,0x4f,0x71,0x93,0x28,0x65,0x03,0x28,0xc9,0x3d},
    {0x40,0x38,0xee,0xc5,0x3a,0x84,0xe3,0xe0,0xea,0x90,0x9f,0x80,0xab,0x0e,0x64,0xf1},
    {0x4a,0x6e,0xcd,0x6a,0x59,0xe8,0x0d,0x73,0xe7,0x7b,0x54,0xc1,0x7d,0x70,0x9e,0x77},
    {0x01,0xe2,0xee,0x14,0x29,0x10,0x5e,0xc5,0x3b,0x81,0x93,0x7d,0x43,0x14,0xd3,0x91},
    {0x7d,0x62,0xa4,0xfc,0x7f,0x1c,0x9c,0x1a,0x97,0x3b,0x95,0x79,0xa9,0xdb,0x91,0xba},
    {0xb3,0xed,0x9e,0x4f,0xea,0x03,0x42,0xd6,0x4a,0x06,0x5a,0x06,0x79,0x7a,0x22,0xbb},
    {0x32,0x17,0xe3,0xc4,0x6b,0x67,0xc8,0x0f,0x05,0x12,0x3b,0x48,0x3a,0x5f,0x96,0xf1},
    {0x12,0x68,0x24,0xcb,0x7d,0x51,0x04,0x6b,0x6b,0x98,0x71,0x0d,0x20,0x56,0xf6,0x83},
    {0xb0,0x58,0x9a,0x77,0x37,0x8c,0x5b,0xff,0xea,0x16,0xdb,0x65,0x83,0xe2,0x52,0xb1},
    {0xd5,0x9e,0xa2,0xcd,0xe2,0x3f,0x01,0xd3,0xe5,0xea,0x11,0x38,0x62,0x70,0x25,0x1f},
    {0x7d,0x3f,0x7a,0x8e,0xc8,0xff,0xe2,0xbc,0x1c,0xa2,0x19,0x84,0x21,0x68,0x32,0x17},
    {0xc1,0xcb,0x4b,0x18,0x16,0xb0,0x6c,0x81,0x64,0x89,0x47,0x16,0xc1,0xe3,0x54,0xe0},
    {0x97,0x6a,0x1f,0x1d,0xa8,0xcd,0x23,0x35,0x9e,0xba,0xc7,0x8c,0x71,0x3e,0xdd,0x55},
    {0xde,0xb6,0x26,0xcf,0x36,0x76,0x79,0x52,0x6e,0x57,0x73,0xce,0xb1,0x78,0xde,0xba},
    {0x49,0xf1,0xac,0xb9,0x6c,0x0b,0xa9,0x8d,0x29,0x1c,0x56,0x76,0xd7,0xa4,0x96,0xed},
    {0x8d,0x6c,0xdb,0x13,0xe6,0x93,0x31,0x02,0x4d,0x42,0xba,0x48,0xa0,0xde,0x2d,0x92},
    {0x87,0xaa,0x8d,0x75,0x18,0xde,0xf5,0x18,0xa7,0x50,0xf9,0x99,0x4d,0x64,0xc2,0x90},
    {0x9f,0xf9,0xe9,0x1e,0x9e,0x55,0xe9,0x7e,0x0b,0x16,0xd9,0x1a,0x18,0x6c,0x83,0xea},
    {0x82,0x23,0x8b,0x6b,0xf7,0x41,0x5a,0x2a,0x6d,0x13,0xf3,0x40,0x12,0x4b,0x3f,0xf2},
    {0x57,0x59,0x9e,0xd9,0xc4,0xef,0x8f,0x56,0xdc,0x72,0x2a,0xbd,0x7c,0x69,0x73,0x64},
    {0x41,0xf4,0xfd,0xa7,0x5a,0xc5,0x9c,0xd5,0x20,0x0c,0x00,0xca,0x35,0xe7,0x19,0x4f},
    {0xd4,0x1e,0x25,0xdd,0x97,0x79,0x34,0x0b,0x41,0x06,0xfb,0x7e,0xd1,0xc7,0x74,0x9c},
    {0x28,0xc7,0xcf,0x0d,0x14,0x08,0x72,0xcc,0xa1,0xd4,0xef,0xf7,0x0e,0x2b,0x00,0x43},
    {0xb0,0xff,0x8d,0x37,0x44,0xb4,0xce,0x7b,0x93,0x48,0x5d,0xba,0xf4,0x58,0x27,0xb5},
    {0xd6,0xfe,0x05,0xca,0x78,0x15,0x0c,0xe3,0xd4,0x84,0x00,0x7c,0x83,0xa6,0xcb,0x5b},
    {0x9e,0x98,0x46,0x41,0x8b,0xa5,0xe2,0x68,0x37,0x31,0xbb,0x09,0xb7,0x25,0x0e,0x1f},
    {0x6d,0xfa,0x8b,0x8a,0xa5,0x96,0x29,0x93,0x23,0xed,0xc3,0x38,0xbf,0xe7,0x26,0xe0},
    {0xa3,0x59,0xfa,0x91,0x84,0xaf,0xec,0x70,0x7f,0xb6,0xab,0x91,0x95,0x79,0x8c,0x1f},
    {0x6a,0xaf,0xa6,0xaf,0x3a,0x0a,0x7a,0xd1,0x0a,0xae,0xa6,0x4e,0x8f,0x2e,0x55,0x31},
    {0x92,0x9a,0xd1,0x05,0xc5,0xc7,0xa7,0xa3,0xba,0x3d,0x5c,0x7c,0x96,0xd5,0x5b,0xe3},
    {0x5e,0xec,0x58,0x77,0xf6,0xd6,0xf4,0x90,0xa0,0x4f,0x1f,0xa1,0x9d,0xb5,0x7c,0x90},
    {0xe9,0x50,0x9d,0x0c,0x8b,0xf4,0x89,0x5b,0x76,0xc9,0x1e,0x19,0x19,0x90,0xed,0xb8},
    {0xae,0xbf,0x1e,0x28,0x4e,0xd0,0x97,0x77,0x10,0x19,0xa4,0x8c,0xdd,0xbb,0xd8,0xbd},
    {0x70,0x57,0xd0,0xbf,0xdb,0xb2,0x93,0x14,0x4f,0xb5,0x9b,0xc9,0xa6,0xc8,0xfa,0x04},
    {0x16,0xfe,0xd4,0xa7,0xaf,0x6e,0xa8,0x73,0x1c,0x8e,0x3e,0x88,0xd3,0x84,0x62,0xab},
    {0x72,0x90,0xcc,0x92,0x5f,0xcf,0x7a,0xe6,0xd8,0x91,0x9d,0xb0,0x8e,0xc5,0x5e,0x2e},
    {0x26,0xf0,0xfc,0x5b,0x44,0xcb,0xda,0xab,0xa0,0xa3,0x3e,0xe5,0x45,0x67,0x16,0xc2},
    {0x31,0xbf,0x7d,0x7b,0x7f,0x3d,0x5e,0x48,0x40,0xe9,0x5a,0xc0,0x76,0xf1,0x81,0x0f},
    {0xe6,0x47,0x0c,0x80,0x02,0xba,0x66,0xb6,0x89,0xf2,0x1c,0x6b,0x1f,0xf7,0xdf,0x19},
    {0xea,0x8d,0x9e,0xd6,0x8f,0x83,0x38,0x9e,0x51,0xfc,0x72,0x84,0xd5,0x80,0xab,0x06},
    {0x3a,0x8c,0x97,0xbe,0x8a,0x97,0x11,0xe2,0xb9,0x07,0x71,0x8f,0xa1,0xf8,0xd9,0xd3},
    {0x52,0xd3,0x39,0x1b,0x29,0xe9,0x4e,0xa8,0x69,0x89,0xfb,0x67,0xf5,0x89,0x84,0x13},
    {0x18,0x9a,0x5c,0x2d,0x58,0xa2,0x2a,0x87,0xff,0x09,0x8d,0xc8,0xc3,0x13,0xb9,0x37},
    {0x5a,0x16,0xc0,0xe8,0xda,0xae,0x1a,0x10,0xa5,0xf7,0x2f,0x7e,0x55,0x8a,0xff,0x1e},
    {0xb9,0xc6,0xf2,0xad,0xf3,0xdf,0xc3,0xdd,0x59,0x5a,0x1b,0x23,0x66,0xc4,0xd2,0x69},
    {0x48,0x78,0xeb,0xb7,0x17,0x08,0x17,0x98,0x41,0xd2,0x36,0xa6,0x9c,0xc0,0x78,0xca},
    {0xf4,0x1c,0x49,0xde,0xf6,0xa5,0xad,0x62,0x1d,0xb9,0x14,0x63,0x61,0x27,0xf7,0x36},
    {0xf3,0x91,0x76,0x4d,0xf8,0x52,0xe4,0xb4,0xb8,0x8a,0x2b,0x27,0x8d,0xfb,0x0e,0xbd},
    {0x43,0x78,0xfc,0x01,0x0e,0xed,0xb9,0x9b,0x70,0xf2,0x5e,0xce,0xd5,0xbb,0xf9,0x9d},
    {0x90,0x69,0x6a,0x8b,0xd4,0xe7,0xd7,0xc9,0x00,0x2d,0xd3,0x7a,0x02,0xa1,0xcc,0x77},
    {0xb6,0x09,0x71,0x2e,0x3f,0xc0,0xcf,0x0c,0x76,0xf4,0xa6,0x71,0x48,0x14,0x45,0x1b},
    {0x11,0x90,0x41,0xd0,0x91,0xa8,0x12,0x2c,0xca,0xbf,0xd8,0x07,0xf1,0xa7,0xcd,0xd2},
    {0x5c,0x39,0x78,0x34,0x9f,0x67,0x82,0x1f,0x76,0x60,0x5a,0x04,0xf2,0x69,0x6a,0xaf},
    {0x5e,0x8d,0xd2,0xc7,0x86,0xae,0x0a,0x5b,0x64,0x23,0x0c,0xc4,0x28,0x06,0x95,0x4f},
    {0x7d,0x30,0x48,0x22,0x5c,0x2a,0x22,0x9d,0x81,0x10,0x0e,0x21,0xd7,0x0f,0xd2,0x7d},
    {0x9e,0x78,0xea,0x8f,0x50,0x30,0x2d,0x45,0x70,0xc0,0xb1,0x5e,0xdd,0x17,0xcb,0xe5},
    {0x4e,0x00,0x60,0x72,0x29,0xf3,0x43,0x88,0xd1,0x4a,0xcb,0x5d,0xe2,0x56,0xf1,0x5c},
    {0xc8,0x0e,0x0b,0xb8,0xd9,0x75,0xba,0xb8,0x3c,0x1a,0x01,0xdf,0xf7,0xd4,0x49,0x1d},
    {0xb0,0x3d,0xe5,0x5b,0x11,0x34,0xe0,0xd5,0x1d,0xaa,0x52,0xbe,0x6e,0x8c,0xd0,0x87},
    {0xdf,0x44,0x12,0x41,0x26,0x7c,0xfd,0x13,0xa9,0xb9,0x22,0xd0,0x28,0x62,0x46,0x37},
    {0x0f,0x31,0x1d,0xa6,0xbf,0x3b,0x1b,0xe6,0x73,0x03,0xad,0x35,0x8c,0xc6,0x1f,0xda},
    {0xf6,0x31,0xe8,0x80,0x75,0x2d,0xe0,0x43,0xe2,0x69,0x8b,0x49,0xa7,0x27,0x80,0x29},
    {0x17,0xcd,0xd4,0x68,0x67,0x00,0xc6,0x67,0x76,0xdf,0x4c,0x4b,0xff,0x96,0xcb,0x31},
    {0xbc,0xb6,0x90,0x66,0x2a,0x0d,0xb8,0x8a,0x6d,0x93,0xe7,0x2e,0xef,0x2a,0x7f,0x36},
    {0xb3,0x40,0x13,0x5a,0x3e,0x40,0x4b,0xf1,0x2a,0x5a,0xef,0x29,0xde,0x41,0x90,0x06},
    {0x52,0x9a,0xce,0x38,0x98,0x1b,0x57,0x50,0xf3,0xbc,0x63,0x51,0x1c,0x03,0xf8,0xb3},
    {0x76,0x0a,0x74,0xdb,0x09,0xca,0x5b,0xa0,0xf0,0xd0,0x53,0x36,0xb5,0x19,0xbe,0xd1},
    {0xbb,0x87,0xa1,0x2e,0x4f,0x0b,0x7e,0xa9,0x4f,0x9c,0xb0,0x4e,0x27,0xec,0x53,0x99},
    {0x69,0x5e,0x1b,0xee,0x8e,0xad,0x61,0xe5,0x7c,0xc3,0x73,0x50,0x98,0xd7,0x93,0x04},
    {0x84,0x92,0xef,0x44,0x6b,0xaf,0x34,0xce,0x9b,0x1b,0x70,0xa8,0x47,0x4d,0x6c,0x24},
    {0xc2,0xab,0xf0,0x41,0x06,0x6d,0xc5,0x04,0x20,0x55,0x6a,0x6a,0xa5,0xe6,0x3a,0xa0},
    {0x61,0xca,0x00,0xe3,0x4b,0x45,0x91,0x0f,0x6f,0x4e,0x5f,0xf0,0xe8,0xae,0x2b,0x9d},
    {0xd1,0xe2,0x45,0x27,0x9e,0x55,0xc3,0x10,0x1d,0x7e,0xb7,0x86,0xe5,0x22,0x02,0x3d},
    {0x25,0xf0,0x7c,0x5d,0x44,0x15,0x85,0xe8,0x63,0xf2,0xdf,0x07,0xb4,0xea,0x35,0xf5},
    {0x45,0xe9,0xb0,0x22,0xf6,0x82,0x54,0xc9,0x79,0x48,0x94,0xed,0x5f,0x82,0x46,0xb0},
    {0xef,0x04,0x5e,0xbf,0x01,0xf8,0xd8,0xf9,0x10,0xe5,0x4c,0xbb,0x0a,0x89,0xd7,0xd5},
    {0x9a,0xb4,0xad,0xd1,0x59,0x59,0x2b,0x16,0x57,0xf8,0xd8,0x02,0x09,0x94,0x64,0xed},
    {0xf5,0x5b,0x2e,0xb2,0xdf,0x0b,0x85,0x76,0x66,0xe3,0x9d,0xd5,0x60,0x39,0x6c,0xe8},
    {0x2e,0xbe,0x13,0xce,0x8e,0x3a,0xca,0xbd,0x3e,0x6f,0xe9,0x13,0xcf,0x9b,0x1a,0xde},
    {0x3f,0xd8,0x99,0xb7,0x5f,0xdb,0x22,0xcd,0xd3,0x59,0x2c,0xee,0xb6,0x03,0x1b,0x66},
    {0x75,0xad,0x07,0xa8,0xdd,0xbc,0x2b,0x5c,0x22,0xe9,0x7f,0xa4,0x8b,0x16,0xbd,0x83},
    {0x0d,0x5e,0xc8,0xdc,0x2d,0xac,0xdf,0xca,0x4b,0x25,0x0d,0x0d,0xcd,0x43,0x5a,0x18},
    {0x4b,0xa8,0x11,0x5a,0x6e,0x4a,0x51,0xd8,0x1e,0x42,0x99,0x26,0xd7,0x91,0x8f,0xbd},
    {0x30,0x4e,0x0d,0x16,0xb0,0x18,0x1c,0x7a,0xda,0x0b,0xd8,0x0b,0xf3,0x89,0xab,0x16},
    {0x0b,0xa2,0x64,0x11,0x20,0x10,0x07,0x21,0x00,0x04,0xb4,0xfd,0xaa,0x7d,0xdd,0x1d},
    {0x0e,0xe1,0xee,0x33,0xbc,0x3a,0x71,0xc7,0x65,0x25,0x14,0x68,0xe2,0xcc,0x0a,0x8a},
    {0x1e,0x6a,0x4c,0x62,0x69,0x56,0xef,0x4e,0x5e,0x55,0xd8,0x2f,0x66,0x73,0xd9,0x90},
    {0x88,0x68,0x66,0x15,0x09,0x35,0xa9,0x07,0xda,0x05,0xac,0xb6,0x91,0xcf,0x5f,0x51},
    {0x9f,0x32,0xa7,0x65,0x3e,0x98,0xad,0xf7,0xcf,0x00,0x33,0x7c,0x99,0x51,0x89,0x3d},
    {0xb7,0x60,0x51,0xfd,0x7d,0xdc,0xb3,0xa2,0xb9,0x2b,0xd5,0x11,0x5d,0x4b,0x1d,0xc3},
    {0xf0,0xa0,0xe3,0x68,0xce,0xe4,0xba,0xd1,0xf2,0xeb,0x02,0xd1,0xeb,0xbe,0xeb,0x23},
    {0x9f,0x08,0x4a,0x00,0x10,0x0b,0xb2,0x6a,0x3d,0x94,0x18,0xff,0x62,0xa0,0x3e,0xf7},
    {0x78,0xa4,0xef,0xea,0x5c,0x4c,0x57,0x4f,0x02,0xfc,0x0e,0x32,0xe1,0xfa,0x07,0x7c},
    {0x6d,0xf8,0x71,0xc3,0xc3,0xa7,0x2f,0x6a,0x36,0x52,0x57,0xcf,0xde,0x91,0xfe,0xbe},
    {0x26,0xca,0xd9,0xb6,0x1b,0x79,0xcd,0x9a,0x12,0x19,0xcd,0x3f,0xe5,0x17,0xb4,0x52},
    {0x9d,0x48,0xb6,0xd0,0x9c,0x3c,0xe4,0x68,0xda,0x89,0x1d,0x7c,0x54,0x53,0x0f,0x18},
    {0x19,0xd8,0xb2,0x5a,0xb3,0x0c,0xed,0x15,0x14,0xae,0x0e,0x32,0xa7,0xca,0x1a,0xfc},
    {0x72,0xb5,0xbd,0x91,0x34,0x33,0xe2,0x80,0xed,0xa2,0xc4,0x65,0x02,0xc1,0x1f,0xf3},
    {0x3e,0x58,0x64,0xd4,0xaf,0x25,0x71,0x41,0x9c,0x2c,0x31,0x40,0x5c,0xd1,0xc2,0x1b},
    {0x8f,0x74,0xe8,0xd1,0xae,0x76,0xd1,0x0f,0x50,0x6a,0xfe,0xa2,0x47,0x77,0xb5,0x0a},
    {0xb1,0xe1,0xcd,0xa4,0xf4,0x5b,0x46,0x92,0x13,0xc6,0xc3,0x2a,0xbe,0x85,0xa7,0x90},
    {0x48,0xbd,0xbc,0xc3,0x5f,0x8a,0x81,0x6c,0x2d,0x6a,0x63,0x9f,0x18,0x00,0x49,0xa9},
    {0xec,0x72,0x90,0xb9,0xb5,0xc2,0xad,0x78,0x32,0x6f,0xa2,0xfc,0x29,0x3d,0x73,0x13},
    {0x0d,0x9e,0x8d,0x88,0x48,0x67,0x45,0xdb,0x52,0x57,0x71,0xb9,0x27,0x8a,0x3e,0xbc},
    {0x2f,0x98,0xa1,0x75,0xe5,0x41,0x31,0x47,0x95,0xd7,0x95,0xde,0x85,0x73,0x6c,0xce},
    {0x69,0xf0,0x7e,0x78,0x30,0x62,0xc1,0xdb,0x20,0xa4,0x56,0xb1,0x97,0x66,0xe2,0xd1},
    {0xf6,0x15,0x29,0xc5,0x62,0xca,0xda,0x3b,0xac,0x03,0x2c,0xe7,0x73,0x56,0xcc,0x9c},
    {0xb5,0x3c,0x2f,0x9b,0x9f,0x0b,0x70,0x96,0xb5,0xed,0xc8,0xf9,0xea,0x39,0xf5,0x7b},
    {0x7b,0xb5,0x23,0x0f,0x1f,0xdb,0xc9,0x41,0xa5,0x57,0x04,0xf8,0x95,0xb5,0xbc,0x96},
    {0x0e,0x56,0x0b,0x8b,0x11,0x1f,0xcc,0xac,0x3f,0x50,0x51,0x28,0x6f,0xf6,0xdf,0x90},
    {0x90,0xfe,0x26,0x0f,0x33,0x32,0x21,0xfc,0x9f,0x64,0x17,0xef,0xfc,0x42,0xdb,0x4f},
    {0xc4,0xfe,0x87,0x6a,0x57,0x85,0xaf,0xef,0x8b,0x0a,0xfb,0x21,0x31,0xa3,0xc6,0x54},
    {0xde,0x20,0x37,0x29,0x0d,0x8f,0x48,0x30,0x10,0xe3,0xde,0xc5,0x30,0x77,0xad,0x50},
    {0xcb,0x38,0xcd,0x71,0xf1,0xca,0x62,0xbd,0x01,0xde,0x6d,0xf1,0xee,0x7c,0xac,0x43},
    {0xf2,0x56,0x63,0x6d,0xf9,0xa6,0x95,0xce,0x98,0xdd,0xfd,0x73,0x4d,0x71,0xd3,0xc1},
    {0x03,0xe8,0x39,0xac,0xba,0x9c,0xaf,0x5d,0x9d,0x9e,0x61,0xa0,0x98,0xbf,0x01,0x1f},
    {0x67,0xc8,0x7a,0xb0,0xd1,0x66,0x81,0xfa,0xe6,0x48,0x14,0x22,0x81,0xb5,0xe1,0x7e},
    {0x31,0x21,0x4d,0xa6,0xc4,0x86,0x1e,0x76,0x56,0x80,0xf8,0x13,0x85,0x4d,0x20,0xcc},
    {0x6c,0xc0,0x0b,0x10,0x5f,0xd2,0x47,0x51,0xed,0x22,0x1a,0x9b,0x73,0xed,0x83,0x34},
    {0x91,0xeb,0xac,0x87,0x56,0x71,0xb6,0x3a,0x8b,0xc3,0xd9,0x45,0x78,0x51,0xca,0x23},
    {0x74,0x01,0x11,0x8f,0xcb,0x8b,0x42,0xcc,0x10,0xae,0xdf,0x98,0x91,0xc2,0x48,0x1d},
    {0xff,0xeb,0xc2,0x33,0xa5,0xde,0xbe,0xab,0x0a,0xfe,0xb7,0x0f,0xe5,0x67,0x22,0x8b},
    {0xae,0xda,0xff,0x5c,0xa2,0x58,0x3b,0x20,0x26,0x6e,0x0a,0x6c,0x2a,0xa9,0x52,0xc9},
    {0x9f,0xca,0xc7,0x5f,0x47,0x5b,0xcc,0x29,0x80,0x50,0x41,0x8b,0x3a,0x4e,0x53,0x32},
    {0xa9,0x97,0x4b,0x5e,0x1f,0x3c,0x85,0xbc,0x3b,0xc1,0x48,0x39,0x39,0xff,0xa4,0x46},
    {0x87,0x83,0x01,0x45,0x07,0x9b,0xf4,0x5c,0xd0,0xbe,0x59,0xad,0xc6,0x94,0x28,0x99},
    {0x1b,0x6a,0x5c,0x09,0x86,0x7d,0x25,0xf4,0xb5,0x30,0x0e,0x30,0xc3,0x41,0x34,0x78},
    {0x44,0x13,0x13,0x46,0x67,0x79,0xf2,0x13,0xcc,0xe6,0xec,0x2b,0xc2,0xca,0x10,0x04},
    {0x87,0xab,0xfb,0x79,0x30,0x6d,0x01,0xa6,0x31,0x79,0xf6,0xe6,0x6e,0x33,0x1b,0x9b},
    {0x2d,0xab,0xd2,0x7a,0x5e,0x3f,0xce,0x91,0x3d,0xf7,0x7e,0x26,0x9f,0xb4,0xa1,0x6b},
    {0xbd,0x6b,0xb1,0xb4,0x6d,0x17,0x8d,0x08,0x4c,0x6e,0xad,0x1c,0x8b,0x75,0x74,0x15},
    {0x52,0xe1,0x53,0xb0,0xb1,0xe4,0xd3,0xdf,0xcf,0x11,0x82,0x43,0x7f,0xd7,0x79,0x11},
    {0xa3,0xe6,0x5b,0xe8,0xfe,0x99,0x37,0xf4,0xe0,0x73,0x74,0x2c,0xcd,0x67,0x75,0xf8},
    {0xe7,0x02,0xcd,0x70,0x60,0x1d,0xdd,0xe3,0x4d,0xcf,0xe7,0xd1,0xe9,0x71,0x84,0x39},
    {0x5d,0x90,0x63,0x16,0x66,0xdd,0xc2,0x66,0x4f,0xd5,0xfb,0xfa,0xd8,0x98,0x17,0xa7},
    {0x27,0x33,0xe9,0x94,0x32,0xf3,0x7e,0x04,0x9b,0xeb,0xd9,0xfd,0xbe,0x51,0x0d,0x20},
    {0xb0,0x9e,0x32,0x21,0x76,0xb7,0xcd,0x94,0xf5,0x09,0xad,0x26,0x6c,0xd1,0x94,0xb1},
    {0x24,0xbb,0x8f,0x7c,0x8e,0x7f,0x74,0x66,0x6e,0x69,0x51,0xdd,0xb1,0x81,0xf8,0xe7},
    {0x40,0x34,0x70,0x3d,0x94,0x37,0x0f,0xee,0x30,0x8d,0x76,0xc0,0x27,0xe0,0xd2,0x43},
    {0x62,0x31,0x5c,0x69,0x88,0x14,0xe5,0x2c,0x25,0xe8,0xfe,0x1b,0x0b,0x2e,0xc7,0x9b},
    {0x6e,0xcb,0x8d,0x43,0x8f,0x1f,0x67,0x66,0x57,0x86,0xff,0x6d,0xc2,0xd8,0xdf,0x68},
    {0xa6,0x0e,0x93,0xbe,0x58,0xd4,0xcc,0x43,0xcf,0x96,0x44,0x95,0x1b,0x3a,0xc1,0x55},
    {0xd8,0x33,0x7f,0xa7,0x5f,0x75,0xb7,0x85,0x25,0x26,0x66,0xb2,0x9f,0x95,0x15,0x9e},
    {0x14,0x82,0x43,0xf2,0x16,0x0f,0xd0,0x1a,0xff,0x9b,0x5c,0x45,0x18,0x32,0x41,0xf9},
    {0xfd,0xde,0xb0,0xc6,0xd8,0xdc,0x71,0x43,0x55,0xcb,0x7c,0xc2,0xc6,0xb8,0xdf,0xa7},
    {0x53,0xdd,0x1c,0xe5,0x31,0xb0,0xd7,0xa8,0x32,0x1c,0x5c,0x1d,0x18,0x7b,0xda,0x62},
    {0x24,0x74,0x6c,0x66,0x3d,0x40,0x1f,0x1d,0xfc,0xc7,0x56,0xf7,0x92,0xe3,0x39,0xb3},
    {0x8d,0x25,0xa6,0x79,0x63,0x73,0xf3,0x41,0x1e,0x75,0x03,0x63,0x82,0x8d,0x2d,0x5a},
    {0x5e,0xb8,0xfe,0xda,0x8d,0xf8,0x5a,0x9b,0x8a,0x0a,0x67,0x2b,0x87,0x72,0x72,0x59},
    {0x4a,0x1e,0xa3,0x9e,0xfb,0x88,0x61,0x03,0x0c,0x89,0x3c,0x05,0x3a,0xa7,0x55,0xf8},
    {0x05,0xaf,0x7d,0x1f,0x01,0x40,0x4c,0x19,0x1f,0xd8,0xcd,0xfc,0x71,0x75,0xd1,0xe6},
    {0x22,0x34,0xc4,0xf9,0x97,0xea,0x87,0x4a,0xf7,0x00,0x0c,0xc5,0x63,0x45,0x96,0x45},
    {0x62,0xb8,0x89,0x7c,0xe4,0x6a,0xb4,0x93,0x51,0x2c,0xab,0x45,0x18,0x76,0x69,0x25},
    {0x74,0xa8,0x75,0xa4,0x1e,0x85,0xf5,0x58,0xdf,0x50,0xed,0x52,0x6e,0xc1,0x12,0x49},
    {0xff,0x97,0xa4,0xfa,0x25,0xaf,0x45,0xc3,0x01,0xc2,0x81,0x69,0x9a,0xb9,0xc5,0x07},
    {0x11,0xd5,0xa4,0x71,0x0c,0x07,0x2d,0x00,0xef,0x08,0x52,0xcc,0xe7,0x8f,0x26,0xba},
    {0xe2,0x6b,0x08,0x43,0x39,0xfe,0x96,0x60,0x9f,0x06,0x81,0x2b,0xd8,0x28,0xdb,0xfe},
    {0x8f,0x6c,0x85,0x3d,0x9a,0xac,0xd2,0x33,0xd4,0xff,0x89,0x57,0x62,0x79,0xfe,0xba},
    {0x3f,0x93,0x43,0xa2,0xe5,0x8b,0x4b,0x75,0xaa,0xe0,0x0b,0xab,0x0c,0x63,0x91,0x72},
    {0x77,0x33,0xfa,0x20,0x1d,0xc8,0x73,0x1c,0x69,0x60,0xa1,0x0f,0x80,0x6c,0x3b,0xe5},
    {0xcf,0x32,0x73,0x0f,0xd7,0xe3,0x8e,0xc1,0x1a,0xec,0xbc,0xe9,0xf0,0x49,0x73,0xe2},
    {0x8f,0xae,0x3d,0x7e,0x52,0xc5,0xb4,0x9c,0xce,0x0e,0xbf,0x6c,0x6a,0x45,0x4c,0xac},
    {0xd2,0xdb,0x4e,0x51,0xf9,0xc7,0x42,0x58,0x89,0x89,0x4c,0xf4,0x36,0x12,0xc4,0xac},
    {0x9a,0xd9,0x14,0x33,0x63,0xb7,0x5a,0xab,0x8f,0x40,0x1e,0x3a,0x3a,0x6f,0x76,0x09},
    {0xb9,0x70,0x8f,0x14,0x4b,0x87,0x59,0xe3,0x9e,0x57,0xd5,0x73,0x64,0xe4,0xf3,0x09},
    {0x24,0x6f,0x5e,0xff,0x07,0x7b,0x0f,0x54,0x50,0x76,0xd4,0x94,0x95,0xef,0x6b,0x64},
    {0x7a,0xec,0x87,0xb2,0xf6,0x77,0x3a,0x7b,0xe7,0x43,0x10,0xb1,0x4b,0xd8,0xe8,0x0e},
    {0x78,0x70,0x8a,0x6f,0xbf,0xb1,0x6c,0x00,0xa2,0x61,0xd2,0x8f,0xef,0xec,0x7e,0x7f},
    {0xa2,0x69,0x15,0x58,0x1d,0x21,0xc6,0x2c,0x1e,0x5c,0x3f,0x6e,0xaf,0xa9,0xa1,0xd7},
    {0xae,0xa7,0x26,0xd1,0xc7,0xee,0xa6,0x30,0x0f,0xde,0xc6,0xd1,0xe0,0xa9,0x66,0x25},
    {0x37,0xb1,0xb1,0x39,0x15,0x1e,0xcd,0xba,0xca,0x52,0x90,0x42,0x4c,0xe6,0x45,0x59},
    {0x38,0xa1,0x3a,0x09,0x2f,0x45,0x4d,0x8c,0x1d,0xd4,0x45,0x0b,0x44,0x5e,0xaa,0xd8},
    {0x3e,0x5f,0xdd,0x06,0x85,0x8f,0x14,0x36,0xa5,0x15,0x34,0xc1,0x0f,0xa4,0xb1,0x7e},
    {0xac,0x4b,0xc4,0x57,0x4d,0x27,0xa3,0xad,0x6f,0x3f,0xdd,0xc3,0x99,0xea,0xc5,0x24},
    {0xab,0x16,0x7a,0x29,0x88,0x1a,0x97,0x7d,0xf8,0x9c,0x11,0x81,0x52,0x04,0xe2,0xbb},
    {0xcb,0xbb,0xda,0x10,0xa5,0x9b,0x37,0x96,0xcc,0xf1,0x9c,0xe8,0x9e,0x2e,0x4b,0x3a},
    {0xf6,0x06,0x26,0x6e,0x4f,0xd3,0x33,0x05,0x61,0xb8,0x60,0x5b,0xf3,0xc3,0xb5,0xc6},
    {0x50,0x3e,0xeb,0x3d,0xc2,0xf8,0x78,0x90,0x16,0xd9,0xb7,0x9e,0x0b,0xbd,0x6b,0x22},
    {0x91,0xf6,0x41,0x8e,0xa6,0x1c,0xb6,0x37,0x9b,0xb0,0x4e,0x3c,0x24,0x16,0x27,0x88},
    {0x8f,0xe4,0xf5,0xed,0x2d,0xc3,0x2f,0xfe,0x58,0x2f,0xc3,0xba,0x34,0xb2,0x57,0x7c},
    {0x9c,0xa7,0xc0,0xc2,0x68,0x18,0x12,0x2b,0xf2,0x41,0x04,0x1c,0xb6,0xa8,0xfa,0x8e},
    {0x68,0x0c,0x9c,0x5d,0xa4,0x79,0x5f,0xad,0xbe,0x73,0x1f,0x75,0x86,0x45,0xf1,0x95},
    {0x0d,0xcb,0x44,0x9d,0x3f,0x8d,0x1d,0xa2,0x9b,0x8a,0x3f,0xb0,0x80,0x6f,0x02,0xcb},
    {0x32,0xb3,0x10,0x2d,0x33,0xfd,0xb6,0x2f,0x11,0xc1,0x2a,0x31,0xc1,0x6f,0x5c,0x4f},
    {0x03,0x23,0x43,0xb8,0x9a,0x04,0x82,0x66,0xdd,0x77,0xdd,0xbe,0xde,0x3d,0xc3,0x52},
    {0xc1,0xae,0xae,0x9a,0xaa,0xbb,0x27,0x1c,0xa0,0xee,0x15,0xa7,0xbe,0xd9,0x1c,0x95},
    {0x41,0xab,0x97,0xba,0x92,0x9c,0x39,0xc6,0x29,0x65,0xf2,0x3e,0xfc,0x75,0x44,0x2a},
    {0x2d,0xe8,0xbb,0x0f,0x40,0xa4,0xdc,0x1b,0xdf,0x78,0xc9,0x84,0x1f,0x0b,0xc0,0xbb},
    {0xf8,0xc5,0x17,0x65,0x33,0x93,0x9d,0xf6,0xcc,0xbe,0x06,0x71,0x7e,0xeb,0x14,0x6c},
    {0x67,0xd1,0x99,0x40,0x6f,0xda,0x56,0xc7,0x39,0xc5,0x19,0x77,0x42,0x2d,0x94,0xcb},
    {0x3b,0xc2,0xcd,0x07,0xd1,0x38,0xc7,0x4f,0xb9,0xff,0x52,0x71,0x66,0xb9,0xe9,0x00},
    {0xa8,0xdf,0xbf,0xe1,0xe3,0x1e,0x14,0x1f,0xce,0x07,0xe2,0x93,0x89,0xb8,0xb8,0xb7}};

    vector< vector<word8> > keycandidate(16);
    
    // Implement the key recovery attack using integral cryptanalysis
    for (int pos = 0; pos < 16; pos++) {
        // For each position, try all 256 possible values for this byte of the 4th round key
        for (int k = 0; k < 256; k++) {
            bool validCandidate = true;
            
            // XOR sum after partial decryption
            word8 xorSum = 0;
            
            // For each ciphertext in our delta-set
            for (int i = 0; i < 256; i++) {
                // Reverse the SubBytes operation (apply InvSBox) with the candidate key byte
                word8 afterInvSBox = inv_Sbox[C[i][pos] ^ k];
                
                // XOR to check the integral property
                xorSum ^= afterInvSBox;
            }
            
            // If the integral property holds (XOR sum is zero), this is a valid key candidate
            if (xorSum == 0) {
                keycandidate[pos].push_back(k);
            }
        }
        cout << "Key candidates for position " << pos << ": ";
        for(int i = 0; i < keycandidate[pos].size(); i++) {
            cout << hex << (int)keycandidate[pos][i] << " ";
        }
        cout << endl;
            
        word8 P[16]={ 0x0 };
        word8 testkey[16] = { 0 };
        ExhaustiveSearch(P, C[0], keycandidate, 0, testkey);
    }

    //调用 
        
        
    }

int main()
{
    word8 sum[16] = { 0x0 };
    IntegralDistinguisher( sum );
    cout << "The output sum of the distinguisher is " << endl;
    cout << sum << endl;
    cout << endl;

    IntegralKeyRecovery ();
    word8 K[16] = { 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf };
    cout << "Real key is " << endl;
    cout << K << endl;
}


